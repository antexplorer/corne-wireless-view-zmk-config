/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W  &kp F  &kp P      &kp B        &kp J    &kp L      &kp U    &kp Y  &kp SEMI        &kp BSPC
&kp LCTRL  &kp A  &kp R  &kp S  &kp T      &kp G        &kp M    &kp N      &kp E    &kp I     &kp O  &kp APOSTROPHE
&kp LSHFT  &kp Z  &kp X  &kp C  &kp D      &kp V        &kp K    &kp H  &kp COMMA  &kp DOT  &kp FSLH         &kp ESC
                         &mo 4  &mo 1  &kp SPACE    &kp SPACE  &kp RET      &to 3
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCLAMATION   &kp AT_SIGN      &kp HASH    &kp DOLLAR   &kp PERCENT       &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp BSPC
    &mo 2     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0        &trans
&kp LSHFT           &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6         &kp F7        &kp F8                &kp F9                &kp F10  &kp LEFT_WIN
                                                 &mo 4        &trans     &kp SPACE       &kp SPACE        &kp RET      &kp RALT
            >;
        };

        num_2_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &trans     &trans       &trans   &trans   &trans   &trans   &trans  &trans
    &trans        &trans        &trans        &trans   &trans     &trans       &trans   &trans   &trans   &trans   &trans  &trans
    &trans       &kp F11       &kp F12       &kp F13  &kp F14    &kp F15      &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
                                              &trans   &trans  &kp SPACE    &kp SPACE  &kp RET   &trans
            >;
        };

        num_pad {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &trans  &kp INSERT  &kp PG_UP        &kp LEFT_BRACE        &kp RIGHT_BRACE       &kp KP_CLEAR  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9     &kp KP_EQUAL       &kp BSPC
&kp LCTRL  &trans    &kp HOME    &kp END  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS         &kp KP_DOT  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6      &kp KP_PLUS   &kp KP_MINUS
&kp LSHFT  &trans      &trans  &kp PG_DN      &kp LEFT_BRACKET      &kp RIGHT_BRACKET    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MULTIPLY  &kp KP_DIVIDE
                                   &mo 4                &trans              &kp SPACE          &kp SPACE     &kp KP_ENTER          &kp DEL
            >;
        };

        nav_layer {
            bindings = <
  &kp TAB  &trans  &trans  &trans  &trans                  &trans                     &trans    &trans    &kp UP     &trans  &trans  &trans
   &trans   &to 0   &to 1   &to 3   &to 5                  &trans                     &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &kp LG(LC(LEFT_ARROW))    &kp LC(LG(RIGHT_ARROW))    &trans    &trans     &trans  &trans  &trans
                           &trans  &trans                  &trans                     &trans    &trans    &trans
            >;
        };

        game_layer {
            bindings = <
  &kp TAB  &trans  &kp Q  &kp W   &kp E     &trans       &trans    &trans    &kp UP     &trans  &trans   &trans
&kp LCTRL  &trans  &kp A  &kp S   &kp D     &trans       &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
&kp LSHFT  &trans  &kp Z  &kp X   &kp C     &trans       &trans    &trans    &trans     &trans  &trans  &kp ESC
                          &mo 4  &trans  &kp SPACE    &kp SPACE   &kp RET    &trans
            >;
        };
    };
};
